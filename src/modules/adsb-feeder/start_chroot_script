#!/usr/bin/env bash
# overall distro module for ADSB.lol image
# <Description what this module does>
# Written by Dirk Hohndel <dirk@hohndel.org>
# GPL V3
########


# Source error handling, leave this in place
set -x
set -e

source /common.sh
install_cleanup_trap

# unpack /filesystem/home/pi /home/"${BASE_USER}" "${BASE_USER}"
# unpack /filesystem/home/root /root root


# Unpack root at the end, so files are modified before
unpack /filesystem/root /

# Install dependencies

apt-get install -y socat gnupg

# install zerotier and tailscale, first get their repo

DEBIAN_DISTRO=$(cat /etc/apt/sources.list | head -1 | cut -d\   -f 3)
echo "deb http://download.zerotier.com/debian/${DEBIAN_DISTRO} ${DEBIAN_DISTRO} main" > /etc/apt/sources.list.d/zerotier.list
curl -fsSL "https://pkgs.tailscale.com/stable/debian/${DEBIAN_DISTRO}.noarmor.gpg" | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
curl -fsSL "https://pkgs.tailscale.com/stable/debian/${DEBIAN_DISTRO}.tailscale-keyring.list" | sudo tee /etc/apt/sources.list.d/tailscale.list

# Update and install - but don't enable

apt-get update
apt-get install -y zerotier-one tailscale
systemctl disable tailscaled
systemctl disable zerotier-one

# If we are armbian, we do something with networking
if [ "$BASE_DISTRO" = "armbian" ] ; then
	apt-get install -y network-manager net-tools

	echo "127.0.0.1 adsb-feeder.local" >> /etc/hosts

	# ensure that we get predictable interface names
	echo "extraargs=net.ifnames=0" >> /boot/armbianEnv.txt

	sed -i 's/Wants=network-online.target/Wants=network-pre.target/;s/After=network.target network-online.target/Before=wpa_supplicant.service network.target network-online.target/' /usr/lib/systemd/system/armbian-firstrun-config.service
	systemctl enable armbian-firstrun-config
fi

# Enable services at boot
systemctl enable adsb-docker
systemctl enable adsb-init.service
systemctl enable adsb-bootstrap.service
systemctl enable adsb-web-forward.service
systemctl enable adsb-update.timer

# Disable some things we don't need and that only eat memory (assuming they exist)
systemctl disable bluetooth.service || true
systemctl disable ModemManager.service || true

