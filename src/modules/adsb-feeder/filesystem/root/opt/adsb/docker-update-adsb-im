#!/bin/bash

cd /opt/adsb
TIME=$(date -Iseconds)

if [ "$1" != "-no-fetch" ] ; then
    # just in case - make some backups
    cp docker.image.versions docker.image.versions.${TIME}
    cp .env env.${TIME}

    UPSTREAM_PATH=https://raw.githubusercontent.com/dirkhh/adsb-feeder-image/latest/src/modules/adsb-feeder/filesystem/root/opt/adsb/docker.image.versions
    if curl -s $UPSTREAM_PATH > docker.image.versions.new ; then
        mv docker.image.versions.new docker.image.versions
        echo "${TIME}: successfully retrieved new image versions from server" >> /var/log/update.log
    else
        echo "${TIME}: failed to retrieved new image versions from server" >> /var/log/update.log
        exit 1
    fi

    # let's check if this really brings in anything new:
    # if any of them are label based (instead of SHA), we have to do the docker pull, anyway
    LABELS=$(grep -v "^#" docker.image.versions.${TIME} | grep -v @sha | wc -l)
    if [ "$LABELS" = "0" ] ; then
        sort < docker.image.versions.${TIME} > /tmp/old.div
        sort < docker.image.versions > /tmp/new.div

        if diff /tmp/old.div /tmp/new.div > /dev/null 2>&1 ; then
            echo "${TIME}: no new container images" >> /var/log/update.log
            exit 0
        fi
    fi
fi

grep -v "_CONTAINER=" .env > env.new
cat docker.image.versions >> env.new
mv env.new .env

echo "${TIME}: pulling new container images and restarting docker" >> /var/log/update.log
bash ./docker-pull.sh
bash /opt/adsb/docker-compose-start

# finally remove the images we no longer use
docker image prune -a -f

sed -i "s/CONTAINER_VERSION=.*/CONTAINER_VERSION=$TIME/" /opt/adsb/.env

echo "${TIME}: done" >> /var/log/update.log
